name: Security Hardened CI Pipeline
on: [push, pull_request]

jobs:
  dependency-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: pip install safety
      - name: Scan for vulnerabilities
        run: safety check -r requirements.txt --full-report

  rotate-keys:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Rotate test keys
        run: |
          # 生成新的AES密钥和IV
          echo "AES_KEY=$(openssl rand -base64 16)" >> .env.test
          echo "AES_IV=$(openssl rand -base64 16)" >> .env.test
          # 确保文件存在
          touch .env.test

  test:
    runs-on: ubuntu-latest
    needs: [dependency-scan, rotate-keys]
    env:
      BASE_URL: ${{ secrets.BASE_URL }}
      FINE_APP_ID: ${{ secrets.FINE_APP_ID }}
      FINE_APP_SECRET: ${{ secrets.FINE_APP_SECRET }}
      # 从.env.test加载AES_KEY和AES_IV
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          check-latest: true
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Load test environment
        run: |
          # 加载.env.test文件
          [ -f .env.test ] && export $(grep -v '^#' .env.test | xargs)
          echo "Using AES_KEY: $AES_KEY"
      - name: Run tests
        run: pytest tests/ --junitxml=test-results.xml
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results.xml